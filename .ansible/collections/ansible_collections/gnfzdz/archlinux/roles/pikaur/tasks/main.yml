---

- name: Check if pikaur is already installed
  ansible.builtin.command: "sh -c 'command -v pikaur'"
  register: register_pikaur_available
  ignore_errors: True
  changed_when: False

- name: Install pikaur
  block:
  - name: Create temporary build directory
    ansible.builtin.tempfile:
      state: directory
      suffix: ansible
    register: register_pikaur_tempdir

  - name: Install pikaur dependencies
    community.general.pacman:
      name: "{{ archlinux_pikaur_dependencies }}"

  - name: Clone pikaur repository
    ansible.builtin.git:
      repo: "https://github.com/actionless/pikaur.git"
      dest: "{{ register_pikaur_tempdir.path }}"
      version: "{{ archlinux_pikaur_bootstrap_version }}"

  # This step will fail when built inside unpriveleged containers
  # as systemd-run fails to build mount, uts and/or ipc namespace
  - name: Use the cloned pikaur to install itself
    ansible.builtin.command:
      chdir: "{{ register_pikaur_tempdir.path }}"
      cmd: "python ./pikaur.py -S --noconfirm --noedit --needed {{ archlinux_pikaur_aur_packages }}"
      creates: "/usr/bin/pikaur"
  when: register_pikaur_available.rc != 0

- name: Configure root for use with pikaur and dynamic users
  ansible.builtin.include_tasks: configure_root.yml
