---

# Partitioning
archlinux_install_cryptroot_name: "cryptroot"
archlinux_install_cryptroot_source: "{{ archlinux_install_part_root_path }}"
archlinux_install_cryptroot_path: "/dev/mapper/{{ archlinux_install_cryptroot_name }}"
archlinux_install_encrypt_keyfile_path: "/root/encrypt.keyfile"
archlinux_install_encrypt_keyfile_temppath: "/root/encrypt.keyfile"

# LLVM
archlinux_install_lvm_source: "{{ archlinux_install_cryptroot_path if archlinux_install_encrypt_root else archlinux_install_part_root_path }}"
archlinux_install_lvm_vg_name: "Container"
archlinux_install_lvm_lv_root_name: "root"
archlinux_install_lvm_lv_root_path: "/dev/mapper/{{ archlinux_install_lvm_vg_name }}-{{ archlinux_install_lvm_lv_root_name }}"

## Compute the source for the root filesystem
archlinux_install_filesystem_root_path: "{{ archlinux_install_lvm_lv_root_path if archlinux_install_lvm else (archlinux_install_cryptroot_path if archlinux_install_encrypt_root else archlinux_install_part_root_path) }}"

## Collections that will need to be installed within the arch-chroot
archlinux_install_provisioning_collections: "{{
((archlinux_install_configure_remote_roles | default([]))
  + ( [ archlinux_install_configure_remote_playbook ] if (archlinux_install_configure_remote_playbook is defined) else [] ))
  | select('match', '^([^.]+\\.){2}[^.]+$')
  | map('regex_replace', '\\.[^.]+$', '')
  | unique }}"

archlinux_install_provisioning_inventory_chroot_path: "/root/inventory"
archlinux_install_provisioning_inventory_full_path: "/mnt{{ archlinux_install_provisioning_inventory_chroot_path }}"
