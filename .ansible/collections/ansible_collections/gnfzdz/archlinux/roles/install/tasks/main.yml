---

- name: Install provisioning dependencies
  community.general.pacman:
    state: present
    name: "{{ archlinux_install_packages_dependencies }}"

- name: Check the indicated boot device exists
  block:
    - name: Check that the indicated boot block device exists
      ansible.builtin.stat:
        path: "{{ archlinux_install_disk_path }}"
      register: register_boot_device_stats

    - name: Check that targetted boot device exists
      ansible.builtin.assert:
        that: register_boot_device_stats.stat.exists and register_boot_device_stats.stat.isblk
        fail_msg: "'{{ archlinux_install_disk_path }}' does not exist or is not a block device"
        success_msg: "Path '{{ archlinux_install_disk_path }}' validated"

    - name: Find size of the block device
      ansible.builtin.command:
        cmd: "blockdev --getsize64 {{ archlinux_install_disk_path }}"
      changed_when: False
      register: register_boot_device_size

- name: Identify the boot mode
  block:
    - name: Check if efivars are available
      ansible.builtin.stat:
        path: "/sys/firmware/efi/efivars"
      register: register_boot_efivars_mounted

    - name: Save the identified boot mode
      ansible.builtin.set_fact:
        archlinux_install_boot_mode: "{{ 'uefi' if (register_boot_efivars_mounted.stat.exists | default(False)) else 'bios' }}"
  when: archlinux_install_boot_mode is not defined

- name: Check configuration
  ansible.builtin.assert:
    that:
      # only bios and uefi are recognized
      - archlinux_install_boot_mode in ['bios', 'uefi']
      # encrypted /boot is placed on the encrypted / partition
      - archlinux_install_encrypt_root or not archlinux_install_encrypt_boot

- name: Set boot mode specific variables
  ansible.builtin.include_vars:
    file: "{{ archlinux_install_boot_mode }}.yml"

- name: Partition for BIOS
  ansible.builtin.include_tasks: "partition_bios.yml"
  when: archlinux_install_boot_mode == 'bios'

- name: Partition for UEFI
  ansible.builtin.include_tasks: "partition_uefi.yml"
  when: archlinux_install_boot_mode == 'uefi'

- name: Prepare LUKS container for root filesystem
  ansible.builtin.include_tasks: "encryption.yml"
  when: archlinux_install_encrypt_root

- name: Prepare LVM for root filesystem
  ansible.builtin.include_tasks: "lvm.yml"
  when: archlinux_install_lvm

- name: Format and mount root filesystem
  ansible.builtin.include_tasks: "mount_root.yml"

- name: Format and mount additional filesystem for BIOS
  ansible.builtin.include_tasks: "mount_bios.yml"
  when: archlinux_install_boot_mode == 'bios'

- name: Format and mount additional filesystem for UEFI
  ansible.builtin.include_tasks: "mount_uefi.yml"
  when: archlinux_install_boot_mode == 'uefi'

- name: Apply base configuration for new system
  ansible.builtin.include_tasks: "configure_base.yml"

- name: Prepare and executed nested ansible provisioning inside arch-chroot
  ansible.builtin.include_tasks: "configure_custom.yml"
