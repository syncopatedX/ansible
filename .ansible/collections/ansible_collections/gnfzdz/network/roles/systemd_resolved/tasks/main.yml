---

- name: Gather os specific variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
  - '{{ ansible_distribution }}.yml'
  - '{{ ansible_os_family }}.yml'
  - 'main.yml'

- name: Install systemd-resolved
  ansible.builtin.package:
    state: present
    use: "{{ network_common_packages_use }}"
    name: "{{ network_systemd_resolved_packages }}"
  when: network_systemd_resolved_packages | default([]) | length > 0

- name: Enable Systemd Resolved Daemon
  ansible.builtin.service:
    name: systemd-resolved.service
    enabled: "{{ network_systemd_resolved_enabled }}"

- name: Create dropin directory for Systemd Resolved configuration
  ansible.builtin.file:
    path: '/etc/systemd/resolved.conf.d/'
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Add ansible managed configuration for systemd-resolved
  ansible.builtin.template:
    src: "main.conf.j2"
    dest: "/etc/systemd/resolved.conf.d/ansible.conf"
    owner: root
    group: root
    mode: '0644'
  notify: Update resolved

# According to ArchWiki, this shouldn't be run in a chroot.
# It might be worth finding another method to test.
- name: Update resolv.conf to symlink of systemd-resolved managed configuration
  ansible.builtin.file:
    path: '/etc/resolv.conf'
    src: '/run/systemd/resolve/stub-resolv.conf'
    state: link
    force: Yes
    owner: root
    group: root
    mode: '0644'
  when: network_systemd_resolved_resolvconf_symlink
