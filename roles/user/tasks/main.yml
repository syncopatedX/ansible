---

- name: Ensure user is present with proper shell and groups
  user:
    name: "{{ user.name }}"
    shell: "{{ user.shell | default('/bin/zsh') }}"
    groups: "{{ user.groups | default([]) }}"
    append: yes
    state: present
  become: true

- when: user.sudoers |default(false)
  become: true
  tags: ['sudoers']
  block:
    - name: Ensure /etc/sudoers.d exists
      file:
        path: /etc/sudoers.d/
        state: directory
        owner: root
        mode: '0700'
        group: root
        recurse: true

    - name: Set NOPASSWD for user in sudoers
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/99-user
        line: '{{ user.name }} ALL=(ALL:ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'
        mode: '0440'
        owner: root
        group: root
        create: true
        backup: true
      when: user.name != 'root'

    - name: Ensure rules.d directory exists
      file:
        path: /etc/polkit-1/rules.d/
        state: directory
        owner: root
        group: root
        mode: '0700'

    - name: Set NOPASSWD for user in polkit
      copy:
        content: |
          /* Allow members of the wheel group to execute any actions
          * without password authentication, similar to "sudo NOPASSWD:"
          */
          polkit.addRule(function(action, subject) {
            if (subject.isInGroup("wheel")) {
              return polkit.Result.YES;
            }
          });
        dest: "/etc/polkit-1/rules.d/49-nopasswd_global.rules"
        mode: '0644'
      when: ansible_os_family == 'Archlinux'

- block:
    - name: Install shell packages
      aur:
        use: paru
        name: "{{ item }}"
        state: present
      with_items:
        - "{{ packages.shell }}"
  rescue:
    - name: install shell packages failed
      debug:
        msg: "Failed to install shell packages"

  tags: ["packages", "shell_pkgs"]

- name: Push aliases template
  template:
    src: ".aliases.j2"
    dest: "{{ profile_config_dir }}/.aliases"
    mode: '0644'
    backup: True
  tags: ['aliases']

- import_tasks:
    file: shell/bash.yml
  tags: ['bash']

- import_tasks:
    file: shell/zsh.yml
  tags: ['zsh']