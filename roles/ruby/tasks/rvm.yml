---

- name: Detect rvm binary
  stat: path='{{ rvm1_rvm }}'
  register: rvm_binary

- name: Detect rvm installer
  stat: path='{{ rvm1_temp_download_path }}/rvm-installer.sh'
  register: rvm_installer

- name: Detect current rvm version
  command: '{{ rvm1_rvm}} version'
  changed_when: False
  register: rvm_current_version
  when: rvm_binary.stat.exists

- name: Install rvm installer
  get_url:
    url: '{{ rvm1_rvm_latest_installer }}'
    dest: '{{ rvm1_temp_download_path }}/rvm-installer.sh'
    mode: 0755
  when: not rvm_installer.stat.exists

- block:

    - name: Import GPG keys from keyservers
      shell: 'gpg2 --batch --keyserver {{ item }} --recv-keys {{ rvm1_gpg_keys }}'
      changed_when: False
      check_mode: False
      with_items: '{{ rvm1_gpg_key_servers }}'

  rescue:

    - name: Import GPG keys from rvm.io, if keyservers failed
      shell: |
        gpg2 --keyserver keyserver.ubuntu.com --recv-keys \
        409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB

  when: not rvm_binary.stat.exists

- name: Install rvm
  shell: >
    /usr/bin/env bash {{ rvm1_temp_download_path }}/rvm-installer.sh {{ rvm1_rvm_version }}
    --path {{ rvm1_install_path }} {{ rvm1_install_flags }}
  when: not rvm_binary.stat.exists

- name: Update rvm
  shell: '{{ rvm1_rvm }} get {{ rvm1_rvm_version }} && {{ rvm1_rvm }} reload'
  changed_when: False
  when: rvm_binary.stat.exists and rvm1_rvm_check_for_updates

- name: Configure rvm
  command: '{{ rvm1_rvm }} autolibs {{ rvm1_autolib_mode }}'
  when: not rvm_binary.stat.exists

- name: Detect rvm openssl
  stat: path='{{ rvm1_install_path }}/usr/ssl'
  register: rvm_openssl

- name: Install openssl
  command: '{{ rvm1_rvm }} pkg install openssl'
  when:
    - not rvm_openssl.stat.exists
