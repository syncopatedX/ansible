Package Manager Installation Report
====================================

Date: {{ ansible_date_time.iso8601 }}
Host: {{ inventory_hostname }}
Distribution: {{ ansible_os_family }} {{ ansible_distribution }} {{ ansible_distribution_version }}
Package Manager Role Version: 1.0.0

Summary
-------
Total packages processed: {{ all_packages | length }}
Successfully installed: {{ package_manager_success | length }}
Failed installations: {{ package_manager_failed | length }}
Success rate: {{ ((package_manager_success | length) / (all_packages | length) * 100) | round(1) }}%

Installation Methods Used
------------------------
{% set methods_used = {} %}
{% for pkg in package_manager_success %}
{% set method = pkg.method | default('system') %}
{% if method in methods_used %}
{{ methods_used.update({method: methods_used[method] + 1}) }}
{% else %}
{{ methods_used.update({method: 1}) }}
{% endif %}
{% endfor %}
{% for method, count in methods_used.items() %}
- {{ method | title }}: {{ count }} packages
{% endfor %}

Successfully Installed Packages
-------------------------------
{% for pkg in package_manager_success | sort(attribute='name') %}
✓ {{ pkg.name }}{% if pkg.method is defined %} ({{ pkg.method }}){% endif %}
{% endfor %}

Failed Package Installations
----------------------------
{% if package_manager_failed | length > 0 %}
{% for pkg in package_manager_failed | sort(attribute='name') %}
✗ {{ pkg.name }}{% if pkg.method is defined %} ({{ pkg.method }}){% endif %}
  {% if pkg.error is defined %}Error: {{ pkg.error }}{% endif %}
  {% if alternative_packages.cargo | selectattr('name', 'equalto', pkg.name) | first | default({}) | length > 0 %}
  Alternative commands: {{ alternative_packages.cargo | selectattr('name', 'equalto', pkg.name) | first | default({}) | attribute('alternative_commands') | default([]) | join(', ') }}
  {% elif alternative_packages.binary | selectattr('name', 'equalto', pkg.name) | first | default({}) | length > 0 %}
  Alternative commands: {{ alternative_packages.binary | selectattr('name', 'equalto', pkg.name) | first | default({}) | attribute('alternative_commands') | default([]) | join(', ') }}
  {% endif %}
{% endfor %}
{% else %}
No failed installations.
{% endif %}

Validation Results
-----------------
{% if validation_results is defined %}
Binary availability checks: {{ validation_results.binary_available | length }} passed, {{ validation_results.binary_missing | length }} failed
System package checks: {{ validation_results.system_installed | length }} passed, {{ validation_results.system_missing | length }} failed
Custom validation checks: {{ validation_results.custom_passed | length }} passed, {{ validation_results.custom_failed | length }} failed
{% else %}
Validation was not performed.
{% endif %}

Configuration Used
-----------------
Cleanup temporary files: {{ package_manager.cleanup_temp | default(true) }}
Validate installations: {{ package_manager.validate_installs | default(true) }}
Retry count: {{ package_manager.retry_count | default(3) }}
Timeout: {{ package_manager.timeout | default(300) }} seconds
Fallback strategy: {{ package_manager.fallback_strategy | join(' → ') }}

{% if ansible_os_family == "Archlinux" %}
Arch Linux Configuration:
- AUR helper: {{ arch_linux.aur_helper | default('paru') }}
- AUR builder user: {{ arch_linux.aur_builder | default(ansible_user) }}
- Makepkg flags: {{ arch_linux.makepkg_flags | default('--noconfirm --needed') }}
{% elif ansible_os_family == "RedHat" %}
Rocky Linux Configuration:
- EPEL enabled: {{ rocky_linux.epel_enabled | default(true) }}
- PowerTools enabled: {{ rocky_linux.powertools_enabled | default(true) }}
- RPM Fusion enabled: {{ rocky_linux.rpmfusion_enabled | default(true) }}
- DNF flags: {{ rocky_linux.dnf_flags | default('-y') }}
{% endif %}

Temporary Files
--------------
Build directory: {{ temp_directories.builds }}
Download directory: {{ temp_directories.downloads }}
Working directory: {{ package_manager_temp_dir }}

Notes
-----
{% if package_manager_failed | length > 0 %}
- Some packages failed to install. Check the failed installations section for alternatives.
{% endif %}
{% if validation_results is defined and validation_results.binary_missing | length > 0 %}
- Some installed packages are not available in PATH. Check environment configuration.
{% endif %}
- This report was generated automatically by the package-manager role.
- For troubleshooting, enable debug mode with package_manager.debug: true

Generated by Syncopated Ansible Package Manager Role