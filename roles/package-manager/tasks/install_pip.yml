---
# Install packages via Python pip

- name: Check if pip is available
  command: which pip3
  register: pip_check
  failed_when: false
  changed_when: false

- name: Install pip if not available
  package:
    name: python3-pip
    state: present
  become: true
  when: pip_check.rc != 0

- name: Install packages via pip
  block:
    - name: Extract pip package information
      set_fact:
        pip_packages_to_install: >-
          {{
            packages_to_install | map('combine', {'pip_info': pip_packages[item.name] | default({})}) | list
          }}

    - name: Install pip packages (system-wide)
      pip:
        name: "{{ item.pip_info.package | default(item.name) }}"
        state: "{% if item.pip_info.version is defined and item.pip_info.version != 'latest' %}forcereinstall{% else %}present{% endif %}"
        version: "{% if item.pip_info.version is defined and item.pip_info.version != 'latest' %}{{ item.pip_info.version }}{% endif %}"
        executable: pip3
      loop: "{{ pip_packages_to_install }}"
      register: pip_install_result
      ignore_errors: true
      become: true
      timeout: "{{ installation_methods.pip.timeout | default(300) }}"
      when: not (installation_methods.pip.user_install | default(false))

    - name: Install pip packages (user install)
      pip:
        name: "{{ item.pip_info.package | default(item.name) }}"
        state: "{% if item.pip_info.version is defined and item.pip_info.version != 'latest' %}forcereinstall{% else %}present{% endif %}"
        version: "{% if item.pip_info.version is defined and item.pip_info.version != 'latest' %}{{ item.pip_info.version }}{% endif %}"
        executable: pip3
        extra_args: --user
      loop: "{{ pip_packages_to_install }}"
      register: pip_user_install_result
      ignore_errors: true
      become: false
      timeout: "{{ installation_methods.pip.timeout | default(300) }}"
      when: installation_methods.pip.user_install | default(false)

    - name: Update PATH for user-installed packages
      set_fact:
        pip_user_path: "{{ ansible_env.HOME }}/.local/bin"
      when: installation_methods.pip.user_install | default(false)

  when: packages_to_install | length > 0

- name: Verify pip installations
  shell: |
    {% if installation_methods.pip.user_install | default(false) %}
    export PATH="{{ ansible_env.PATH }}:{{ pip_user_path | default('') }}"
    {% endif %}
    which {{ item.pip_info.package | default(item.name) }} || python3 -c "import {{ item.pip_info.package | default(item.name) }}"
  loop: "{{ pip_packages_to_install | default([]) }}"
  register: pip_verify_result
  failed_when: false
  changed_when: false
  become: false

- name: Process pip installation results
  set_fact:
    package_manager_success: >-
      {{
        package_manager_success + 
        (packages_to_install | selectattr('name', 'in', 
          (pip_install_result.results | default([]) | selectattr('changed', 'equalto', true) | map(attribute='item') | map(attribute='name') | list) +
          (pip_user_install_result.results | default([]) | selectattr('changed', 'equalto', true) | map(attribute='item') | map(attribute='name') | list) +
          (pip_verify_result.results | default([]) | selectattr('rc', 'equalto', 0) | map(attribute='item') | map(attribute='name') | list)
        ) | list)
      }}
    package_manager_failed: >-
      {{
        package_manager_failed +
        (packages_to_install | rejectattr('name', 'in', 
          (pip_install_result.results | default([]) | selectattr('changed', 'equalto', true) | map(attribute='item') | map(attribute='name') | list) +
          (pip_user_install_result.results | default([]) | selectattr('changed', 'equalto', true) | map(attribute='item') | map(attribute='name') | list) +
          (pip_verify_result.results | default([]) | selectattr('rc', 'equalto', 0) | map(attribute='item') | map(attribute='name') | list)
        ) | list)
      }}
  when: packages_to_install | length > 0

- name: Display pip installation results
  debug:
    msg: |
      Pip package installation completed:
      - Attempted: {{ packages_to_install | length }}
      - Successful: {{ 
          (pip_install_result.results | default([]) | selectattr('changed', 'equalto', true) | list | length) +
          (pip_user_install_result.results | default([]) | selectattr('changed', 'equalto', true) | list | length)
        }}
      - Failed: {{ 
          (pip_install_result.results | default([]) | rejectattr('changed', 'equalto', true) | list | length) +
          (pip_user_install_result.results | default([]) | rejectattr('changed', 'equalto', true) | list | length)
        }}
  when: 
    - package_manager.debug | default(false)
    - packages_to_install | length > 0