---
- name: Configure Bridge Interface
  hosts: all
  gather_facts: true
  vars:
    default_gateway: "192.168.41.1"
    default_dns: "192.168.41.1"
    default_dns_search: "syncopated.net"

  tasks:
    - name: Prompt for existing bridge name to remove (if any)
      pause:
        prompt: "Enter existing bridge name to remove (if any):"
      register: old_bridge_name

    - name: Prompt for new bridge interface name
      pause:
        prompt: "Enter new bridge interface name:"
      register: bridge_name

    - name: Get available network interfaces
      set_fact:
        available_interfaces: "{{ ansible_interfaces | select('match', '^en') | list }}"

    - name: Prompt for bridge slave interface
      pause:
        prompt: "Choose interface to use as a bridge: {{ available_interfaces }}"
      register: bridge_slave

    - name: Get current IP address of slave interface
      shell: "ip address | grep '{{ bridge_slave.user_input }}' | grep inet | awk '{print $2}'"
      register: current_ip
      ignore_errors: true

    - name: Prompt for bridge IP address
      pause:
        prompt: "Enter IP address for bridge interface (current: {{ current_ip.stdout | default('None') }}):"
      register: ipaddr

    - name: Prompt for bridge gateway
      pause:
        prompt: "Enter gateway (default: {{ default_gateway }}):"
      register: gateway

    - name: Prompt for bridge DNS
      pause:
        prompt: "Enter DNS (default: {{ default_dns }}):"
      register: dns

    - name: Prompt for bridge DNS search
      pause:
        prompt: "Enter DNS search (default: {{ default_dns_search }}):"
      register: search

    - name: Confirm configuration
      pause:
        prompt: |
          "Confirm configuration:
          Old bridge to remove: {{ old_bridge_name.user_input | default('None') }}
          Bridge name: {{ bridge_name.user_input }}
          Bridge slave: {{ bridge_slave.user_input }}
          Bridge address: {{ ipaddr.user_input }}
          Bridge gateway: {{ gateway.user_input | default(default_gateway) }}
          Bridge DNS: {{ dns.user_input | default(default_dns) }}
          Bridge DNS search: {{ search.user_input | default(default_dns_search) }}
          Is this correct? (yes/no)"
      register: confirmation

    - block:
        - name: Remove old bridge (if specified)
          nmcli:
            conn_name: "{{ old_bridge_name.user_input }}"
            state: absent
          when: old_bridge_name.user_input | length > 0

        - name: Create new bridge interface
          nmcli:
            conn_name: "{{ bridge_name.user_input }}"
            type: bridge
            autoconnect: yes
            ifname: "{{ bridge_name.user_input }}"
            ip4: "{{ ipaddr.user_input }}"
            gw4: "{{ gateway.user_input | default(default_gateway) }}"
            dns4: "{{ dns.user_input | default(default_dns) }}"
            dns4_search: "{{ search.user_input | default(default_dns_search) }}"
            state: present
          notify: restart_networkmanager

        - name: Remove existing connection of slave interface
          nmcli:
            conn_name: "{{ bridge_slave.user_input }}"
            state: absent
          notify: restart_networkmanager

        - name: Add slave interface to bridge
          nmcli:
            conn_name: "{{ bridge_slave.user_input }}"
            type: bridge-slave
            master: "{{ bridge_name.user_input }}"
            autoconnect: yes
            ifname: "{{ bridge_slave.user_input }}"
            state: present
          notify: restart_networkmanager

        - name: Prompt for reboot
          pause:
            prompt: "Reboot now? (yes/no)"
          register: reboot_confirmation

        - name: Reboot system
          reboot:
          when: reboot_confirmation.user_input | lower == 'yes'
        
        - name: Wait for remote host to come back online
          wait_for_connection:
            delay: 10
            timeout: 300
          when: reboot_confirmation.user_input | lower == 'yes'

      when: confirmation.user_input | lower == 'yes'
      rescue:
        - name: Inform user of cancellation
          debug:
            msg: "Bridge configuration cancelled by user."

  handlers:
    - name: restart_networkmanager
      service:
        name: NetworkManager
        state: restarted